{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","piano","setPiano","showLabel","setShowLabel","pressPitch","useCallback","pitch","keyDown","note","getKey","getOctave","releasePitch","keyUp","Piano","useMemo","lazy","a","getPiano","default","EtudePiano","TonePiano","velocities","toDestination","load","className","fallback","href","target","rel","htmlFor","name","type","checked","onChange","start","end","onKeyPress","onKeyRelease","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA2FeA,MAtFf,WAAgB,IAAD,EACaC,mBAAS,MADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,oBAAS,GAF9B,mBAENG,EAFM,KAEKC,EAFL,KAIPC,EAAaC,uBACjB,SAACC,GACCN,EAAMO,QAAQ,CAAEC,KAAMF,EAAMG,SAAWH,EAAMI,gBAE/C,CAACV,IAGGW,EAAeN,uBACnB,SAACC,GACCN,EAAMY,MAAM,CAAEJ,KAAMF,EAAMG,SAAWH,EAAMI,gBAE7C,CAACV,IAGGa,EAAQC,mBAAQ,WACpB,OAAOC,eAAI,sBAAC,4BAAAC,EAAA,yDACG,MAAThB,EADM,gCAEYiB,IAFZ,OAEFjB,EAFE,OAGRC,EAASD,GAHD,gCAKH,CAAEkB,QAASC,UALR,8CAOX,CAACnB,IA1BS,SA4BEiB,IA5BF,2EA4Bb,4BAAAD,EAAA,6DACQhB,EAAQ,IAAIoB,IAAU,CAAEC,WAAY,KACpCC,gBAFR,SAGQtB,EAAMuB,OAHd,gCAKSvB,GALT,4CA5Ba,sBA2Eb,OACE,qBAAKwB,UAAU,YAAf,SACE,eAAC,WAAD,CAAUC,SAAU,6CAApB,UAvCA,mBACEC,KAAK,oDACLC,OAAO,SACPC,IAAI,sBACJJ,UAAU,QAJZ,yCAaA,uBAAMA,UAAU,SAAhB,UACE,uBAAOK,QAAQ,oBAAf,yBACA,uBACEC,KAAK,oBACLC,KAAK,WACLC,QAAS9B,EACT+B,SAAU,kBAAM9B,GAAcD,SAQlC,cAACW,EAAD,CACEqB,MAAM,KACNC,IAAI,KACJC,WAAYhC,EACZiC,aAAc1B,EACdT,UAAWA,UC/DJoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.08326d14.chunk.js","sourcesContent":["import { Piano as TonePiano } from \"@tonejs/piano\";\nimport { lazy, Suspense, useCallback, useMemo, useState } from \"react\";\nimport { Piano as EtudePiano } from \"react-etude-piano\";\nimport \"./App.css\";\n\nfunction App() {\n  const [piano, setPiano] = useState(null);\n  const [showLabel, setShowLabel] = useState(false);\n\n  const pressPitch = useCallback(\n    (pitch) => {\n      piano.keyDown({ note: pitch.getKey() + pitch.getOctave() });\n    },\n    [piano]\n  );\n\n  const releasePitch = useCallback(\n    (pitch) => {\n      piano.keyUp({ note: pitch.getKey() + pitch.getOctave() });\n    },\n    [piano]\n  );\n\n  const Piano = useMemo(() => {\n    return lazy(async () => {\n      if (piano == null) {\n        const piano = await getPiano();\n        setPiano(piano);\n      }\n      return { default: EtudePiano };\n    });\n  }, [piano]);\n\n  async function getPiano() {\n    const piano = new TonePiano({ velocities: 5 });\n    piano.toDestination();\n    await piano.load();\n\n    return piano;\n  }\n\n  function renderLinks() {\n    return (\n      <a\n        href=\"https://github.com/andrewthehan/react-etude-piano\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"links\"\n      >\n        react-etude-piano on GitHub\n      </a>\n    );\n  }\n\n  function renderInputs() {\n    return (\n      <span className=\"inputs\">\n        <label htmlFor=\"show-labels-input\">Show labels</label>\n        <input\n          name=\"show-labels-input\"\n          type=\"checkbox\"\n          checked={showLabel}\n          onChange={() => setShowLabel(!showLabel)}\n        />\n      </span>\n    );\n  }\n\n  function renderPiano() {\n    return (\n      <Piano\n        start=\"A1\"\n        end=\"C8\"\n        onKeyPress={pressPitch}\n        onKeyRelease={releasePitch}\n        showLabel={showLabel}\n      />\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <Suspense fallback={<div>Loading...</div>}>\n        {renderLinks()}\n        {renderInputs()}\n        {renderPiano()}\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}